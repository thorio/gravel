## Default configuration for gravel

## Configures the key for single-instance functionality.
## Set to null to disable.
single_instance: gravel

## Binds global hotkeys to actions.
## The hotkey is configured as an emacs-like binding, though note that some
## features, such as cords, are not supported.
##
## Binding examples:
##   `A-<Space>` => Alt + Space
##   `C-M-s` => Control + Super/Windows + S
##   `a` => A
##
## A complete list of supported modifiers and keys can be found here:
## https://github.com/thorio/gravel/blob/master/gravel-core/src/hotkeys/structs.rs
hotkeys:

  ## Shows or hides the frontend. These actions are also available seperately,
  ## as `Show` and `Hide`
  - binding: A-<Space>
    action: ShowHide

  ## Shows the frontend and pre-populates with the given query.
  # - binding: M-r
  #   action: ShowWith
  #   query: example

## Frontend, or UI, to use. This is responsible for the elements you
## interact with.
frontend:

  ## The default FLTK-based frontend.
  plugin: default

  ## Optional configuration alias. See the `plugin_config` section below.
  ## Defaults to the plugin's name.
  alias: frontend

## Providers to use. These are responsible for the results you get.
## Providers each yield different sets of results, so if you need more or
## less functionality, you can configure this here.
providers:

  ## Default calculator. If it detects a mathematical expression, such as
  ## `1 + 2` or `5 * sin(3)`, it will display its result at the very top of
  ## the list and allow you to copy the value to your clipboard.
  ##
  ## A complete list of supported expressions and constants can be found here:
  ## https://docs.rs/meval/latest/meval/#supported-expressions
  - plugin: calculator

  ## Default application finder. It will search the applications installed on
  ## your system and allow you to launch them.
  ##
  ## On Linux this will search your desktop entries,
  ## on Windows it will search the Start menu.
  - plugin: program

  ## Default web searcher. It will always insert a result at the very bottom of
  ## the list that, when selected, will search the web for your query.
  - plugin: websearch

  ## This is a second instance of the previous web search provider.
  ## It's set up to open the query in Google Translate instead.
  ##
  ## See `plugin_config > my_translate` below for this provider's configuration.
  - plugin: websearch

    ## Optional configuration alias. See the `plugin_config` section below.
    ## Defaults to the plugin's name.
    alias: my_translate

    ## This option disables the provider for any query that is not prefixed
    ## with this keyword, then shows only this providers results for any
    ## query that is.
    keyword: tr

## This is where plugins (providers / frontends) read their configuration from.
##
## By default plugins read from `plugin_config > {my_plugin}`, but you can use
## an alias to changes this. With aliases, you can have multiple instances of
## the same provider, each with a different configuration.
##
## See the second `websearch` plugin above for a practical example.
plugin_config:

  ## Configuration for the websearch plugin, repurposing it for opening the
  ## query in Google Translate.
  my_translate:
    url_pattern: "https://translate.google.com/?text={}"
    subtitle: Translate

  ## All further plugin configuration is commented out, since the defaults
  ## are actually set by the respective plugin.
  ## Simply uncomment anything you want to change.

  #websearch:

    ## Determines which URL is opened. The default is Google Search.
    ## The placeholder `{}` is replaced with the URL-encoded query.
    ##
    ## For example, you could use:
    ## - `https://duckduckgo.com/?q={}`
    ## - `https://www.ecosia.org/search?q={}`
    ## - `https://www.bing.com/search?q={}`
    ## - `https://search.yahoo.com/search?p={}`
    ##
    #url_pattern: "https://www.google.com/search?q={}"

    ## Changes the subtitle of the hit. Visual difference only.
    #subtitle: Web Search
